## Plotting
test$Site <- c(rep("S1", 5), rep("S2", 5), rep("S3", 5), rep("S4", 5), rep("S5", 5), rep("R1", 4), rep("R2", 4), rep("R3", 5), rep("R4", 5), rep("R5", 5))
test$Location <- c(rep("Snowbed", 25), rep("Ridge", 23))
# make a fake pcoa
dist      <- vegdist(test[,1:807],  method = "bray", binary = TRUE)
fake_pcoa <- pcoa(dist)
#summary(fake_pcoa)
# get the out of pcoa
# site scores = samples
sitescores   <- fake_pcoa$vectors #we need only the first two axis
newdata <- as.data.frame(cbind(sitescores[,1:2], Location = test$Location, Site = test$Site))
#one way
soren <- ggplot(newdata, aes(y = as.numeric(Axis.1), x = as.numeric(Axis.2), shape = Location, color = Site))
soren <- soren + geom_hline(yintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_vline(xintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_point(size = 3, alpha = .5)
soren <- soren + theme_bw()
soren <- soren + xlab = paste("PCoA 1 (", explainvar1, "%)", sep = "")
fungal.S.pcoa <- cmdscale(fungalS, eig = TRUE, k = 3)
explainvar1 <- round(fungal.S.pcoa$eig[1]/sum(fungal.pcoa$eig), 3) * 100
explainvar2 <- round(fungal.S.pcoa$eig[2]/sum(fungal.pcoa$eig), 3) * 100
explainvar3 <- round(fungal.S.pcoa$eig[3]/sum(fungal.pcoa$eig), 3) * 100
sum.eig <- sum(explainvar1, explainvar2, explainvar3)
#Define Plot Parameters
par(mar = c(5,5,1,2), .1)
#Initiate Plot
plot(fungal.S.pcoa$points[,1], fungal.S.pcoa$points[,2], ylim = c(-.4, .5),
xlab = paste("PCoA 1 (", explainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
test <- rarefied_site_species
## Plotting
test$Site <- c(rep("S1", 5), rep("S2", 5), rep("S3", 5), rep("S4", 5), rep("S5", 5), rep("R1", 4), rep("R2", 4), rep("R3", 5), rep("R4", 5), rep("R5", 5))
test$Location <- c(rep("Snowbed", 25), rep("Ridge", 23))
# make a fake pcoa
dist      <- vegdist(test[,1:807],  method = "bray", binary = TRUE)
fake_pcoa <- pcoa(dist)
#summary(fake_pcoa)
# get the out of pcoa
# site scores = samples
sitescores   <- fake_pcoa$vectors #we need only the first two axis
newdata <- as.data.frame(cbind(sitescores[,1:2], Location = test$Location, Site = test$Site))
#one way
soren <- ggplot(newdata, aes(y = as.numeric(Axis.1), x = as.numeric(Axis.2), shape = Location, color = Site))
soren <- soren + geom_hline(yintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_vline(xintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_point(size = 3, alpha = .5)
soren <- soren + theme_bw()
soren <- soren + lab(x = paste("PCoA 1 (", explainvar1, "%)", sep = ""), y = paste("PCoA 2 (", explainvar2, "%)", sep = ""))
fungal.S.pcoa <- cmdscale(fungalS, eig = TRUE, k = 3)
explainvar1 <- round(fungal.S.pcoa$eig[1]/sum(fungal.pcoa$eig), 3) * 100
explainvar2 <- round(fungal.S.pcoa$eig[2]/sum(fungal.pcoa$eig), 3) * 100
explainvar3 <- round(fungal.S.pcoa$eig[3]/sum(fungal.pcoa$eig), 3) * 100
sum.eig <- sum(explainvar1, explainvar2, explainvar3)
#Define Plot Parameters
par(mar = c(5,5,1,2), .1)
#Initiate Plot
plot(fungal.S.pcoa$points[,1], fungal.S.pcoa$points[,2], ylim = c(-.4, .5),
xlab = paste("PCoA 1 (", explainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
test <- rarefied_site_species
## Plotting
test$Site <- c(rep("S1", 5), rep("S2", 5), rep("S3", 5), rep("S4", 5), rep("S5", 5), rep("R1", 4), rep("R2", 4), rep("R3", 5), rep("R4", 5), rep("R5", 5))
test$Location <- c(rep("Snowbed", 25), rep("Ridge", 23))
# make a fake pcoa
dist      <- vegdist(test[,1:807],  method = "bray", binary = TRUE)
fake_pcoa <- pcoa(dist)
#summary(fake_pcoa)
# get the out of pcoa
# site scores = samples
sitescores   <- fake_pcoa$vectors #we need only the first two axis
newdata <- as.data.frame(cbind(sitescores[,1:2], Location = test$Location, Site = test$Site))
#one way
soren <- ggplot(newdata, aes(y = as.numeric(Axis.1), x = as.numeric(Axis.2), shape = Location, color = Site))
soren <- soren + geom_hline(yintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_vline(xintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_point(size = 3, alpha = .5)
soren <- soren + theme_bw()
soren <- soren + labs(x = paste("PCoA 1 (", explainvar1, "%)", sep = ""), y = paste("PCoA 2 (", explainvar2, "%)", sep = ""))
soren
fungal.S.pcoa <- cmdscale(fungalS, eig = TRUE, k = 3)
explainvar1 <- round(fungal.S.pcoa$eig[1]/sum(fungal.pcoa$eig), 3) * 100
explainvar2 <- round(fungal.S.pcoa$eig[2]/sum(fungal.pcoa$eig), 3) * 100
explainvar3 <- round(fungal.S.pcoa$eig[3]/sum(fungal.pcoa$eig), 3) * 100
sum.eig <- sum(explainvar1, explainvar2, explainvar3)
#Define Plot Parameters
par(mar = c(5,5,1,2), .1)
#Initiate Plot
plot(fungal.S.pcoa$points[,1], fungal.S.pcoa$points[,2], ylim = c(-.4, .5),
xlab = paste("PCoA 1 (", explainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", explainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
test <- rarefied_site_species
## Plotting
test$Site <- c(rep("S1", 5), rep("S2", 5), rep("S3", 5), rep("S4", 5), rep("S5", 5), rep("R1", 4), rep("R2", 4), rep("R3", 5), rep("R4", 5), rep("R5", 5))
test$Location <- c(rep("Snowbed", 25), rep("Ridge", 23))
# make a fake pcoa
dist      <- vegdist(test[,1:807],  method = "bray", binary = TRUE)
fake_pcoa <- pcoa(dist)
#summary(fake_pcoa)
# get the out of pcoa
# site scores = samples
sitescores   <- fake_pcoa$vectors #we need only the first two axis
newdata <- as.data.frame(cbind(sitescores[,1:2], Location = test$Location, Site = test$Site))
#one way
soren <- ggplot(newdata, aes(y = as.numeric(Axis.1), x = as.numeric(Axis.2), shape = Location, color = Site))
soren <- soren + geom_hline(yintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_vline(xintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_point(size = 3, alpha = .5)
soren <- soren + theme_bw()
soren <- soren + labs(y = paste("PCoA 1 (", explainvar1, "%)", sep = ""), x = paste("PCoA 2 (", explainvar2, "%)", sep = ""))
soren
fungal.pcoa <- cmdscale(fungalBC, eig = TRUE, k = 3)
explainvar1 <- round(fungal.pcoa$eig[1]/sum(fungal.pcoa$eig), 3) * 100
explainvar2 <- round(fungal.pcoa$eig[2]/sum(fungal.pcoa$eig), 3) * 100
explainvar3 <- round(fungal.pcoa$eig[3]/sum(fungal.pcoa$eig), 3) * 100
sum.eig <- sum(explainvar1, explainvar2, explainvar3)
test <- rarefied_site_species
test$Site <- c(rep("S1", 5), rep("S2", 5), rep("S3", 5), rep("S4", 5), rep("S5", 5), rep("R1", 4), rep("R2", 4), rep("R3", 5), rep("R4", 5), rep("R5", 5))
test$Location <- c(rep("Snowbed", 25), rep("Ridge", 23))
## Plotting
# make a fake pcoa
dist      <- vegdist(test[,1:807],  method = "bray", binary = TRUE)
fake_pcoa <- pcoa(dist)
#summary(fake_pcoa)
# get the out of pcoa
# site scores = samples
sitescores   <- fake_pcoa$vectors #we need only the first two axis
newdata <- as.data.frame(cbind(sitescores[,1:2], Location = test$Location, Site = test$Site))
#one way
soren <- ggplot(newdata, aes(y = as.numeric(Axis.1), x = as.numeric(Axis.2), shape = Location, color = Site))
soren <- soren + geom_hline(yintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_vline(xintercept = 0, color = "grey", linetype = "dashed")
soren <- soren + geom_point(size = 3, alpha = .5)
soren <- soren + theme_bw()
soren <- soren + labs(y = paste("PCoA 1 (", explainvar1, "%)", sep = ""), x = paste("PCoA 2 (", explainvar2, "%)", sep = ""))
soren
fungal.pcoa <- cmdscale(fungalBC, eig = TRUE, k = 3)
explainvar1 <- round(fungal.pcoa$eig[1]/sum(fungal.pcoa$eig), 3) * 100
explainvar2 <- round(fungal.pcoa$eig[2]/sum(fungal.pcoa$eig), 3) * 100
explainvar3 <- round(fungal.pcoa$eig[3]/sum(fungal.pcoa$eig), 3) * 100
sum.eig <- sum(explainvar1, explainvar2, explainvar3)
test <- rarefied_site_species
test$Site <- c(rep("S1", 5), rep("S2", 5), rep("S3", 5), rep("S4", 5), rep("S5", 5), rep("R1", 4), rep("R2", 4), rep("R3", 5), rep("R4", 5), rep("R5", 5))
test$Location <- c(rep("Snowbed", 25), rep("Ridge", 23))
## Plotting
# make a fake pcoa
dist      <- vegdist(test[,1:807],  method = "bray")
fake_pcoa <- pcoa(dist)
#summary(fake_pcoa)
# get the out of pcoa
# site scores = samples
sitescores   <- fake_pcoa$vectors #we need only the first two axis
newdata <- as.data.frame(cbind(sitescores[,1:2], Location = test$Location, Site = test$Site))
#one way
bray <- ggplot(newdata, aes(y = as.numeric(Axis.1), x = as.numeric(Axis.2), shape = Location, color = Site))
bray <- bray + geom_hline(yintercept = 0, color = "grey", linetype = "dashed")
bray <- bray + geom_vline(xintercept = 0, color = "grey", linetype = "dashed")
bray <- bray + geom_point(size = 3, alpha = .5)
bray <- bray + theme_bw()
bray <- bray + labs(y = paste("PCoA 1 (", explainvar1, "%)", sep = ""), x = paste("PCoA 2 (", explainvar2, "%)", sep = ""))
bray
env.chem <- as.matrix(env[,c(2:4)])
BC.dbrda <- dbrda(fungalBC ~ ., as.data.frame(env.chem))
ordiplot(BC.dbrda)
BC.dbrda0 <- dbrda(fungalBC ~ 1, as.data.frame(env.chem))
BC.dbrda1 <- dbrda(fungalBC ~ ., as.data.frame(env.chem))
BC.dbrda <- ordiR2step(BC.dbrda0, BC.dbrda1, perm.max = 999)
permutest(BC.dbrda, permutations = 999)
env.chem <- as.matrix(env[,c(2:4)])
S.dbrda <- dbrda(fungalS ~ ., as.data.frame(env.chem))
ordiplot(S.dbrda)
S.dbrda0 <- dbrda(fungalS ~ 1, as.data.frame(env.chem))
S.dbrda1 <- dbrda(fungalS ~ ., as.data.frame(env.chem))
S.dbrda <- ordiR2step(S.dbrda0, S.dbrda1, perm.max = 999)
permutest(S.dbrda, permutations = 999)
envfit(S.dbrda, env.chem, permutations = 999)
#Calculating explained variation on axes
S.explainvar1 <- round(S.dbrda$CCA$eig[1]/
sum(c(S.dbrda$CCA$eig, S.dbrda$CA$eig)),
3 ) * 100
S.explainvar2 <- round(S.dbrda$CCA$eig[2]/
sum(c(S.dbrda$CCA$eig, S.dbrda$CA$eig)),
3 ) * 100
#Plotting constrained ordination results
par(mar = c(5,5,4,4) + .1)
plot(scores(S.dbrda, display = "wa"), xlim = c(-2, 2.1), ylim = c(-2.3, 2.0),
xlab = paste("dbRDA 1 (", S.explainvar1, "%)", sep = ""),
ylab = paste("dbRDA 2 (", S.explainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE
)
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
points(scores(S.dbrda, display = "wa"),
pch = 19, cex = 3, bg = "gray", col = "gray")
text(scores(S.dbrda, display = "wa"),
labels = row.names(scores(S.dbrda, display = "wa")))
#Plotting vectors for influence of environmental factors
vectors <- scores(S.dbrda, display = "bp")
arrows(0, 0, vectors[,1], vectors[,2],
lwd = 2, lty = 1, length = .2, col = "red")
text(vectors[,1], vectors[,2], pos = 3,
labels = row.names(vectors), col = "red")
axis(side = 3, lwd.ticks = 2, cex.axis = 1.2, las = 1, col = "red", lwd = 2.2,
at = pretty(range(vectors[,1])) * 2, labels = pretty(range(vectors[,1])))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.2, las = 1, col = "red", lwd = 2.2,
at = pretty(range(vectors[,2])) * 2, labels = pretty(range(vectors[,2])))
env.chem <- as.matrix(env[,c(2:4)])
BC.dbrda <- dbrda(fungalBC ~ ., as.data.frame(env.chem))
ordiplot(BC.dbrda)
BC.dbrda0 <- dbrda(fungalBC ~ 1, as.data.frame(env.chem))
BC.dbrda1 <- dbrda(fungalBC ~ ., as.data.frame(env.chem))
BC.dbrda <- ordiR2step(BC.dbrda0, BC.dbrda1, perm.max = 999)
permutest(BC.dbrda, permutations = 999)
env.chem <- as.matrix(env[,c(2:4)])
S.dbrda <- dbrda(fungalS ~ ., as.data.frame(env.chem))
ordiplot(S.dbrda)
S.dbrda0 <- dbrda(fungalS ~ 1, as.data.frame(env.chem))
S.dbrda1 <- dbrda(fungalS ~ ., as.data.frame(env.chem))
S.dbrda <- ordiR2step(S.dbrda0, S.dbrda1, perm.max = 999)
permutest(S.dbrda, permutations = 999)
envfit(S.dbrda, env.chem, permutations = 999)
#Calculating explained variation on axes
S.explainvar1 <- round(S.dbrda$CCA$eig[1]/
sum(c(S.dbrda$CCA$eig, S.dbrda$CA$eig)),
3 ) * 100
S.explainvar2 <- round(S.dbrda$CCA$eig[2]/
sum(c(S.dbrda$CCA$eig, S.dbrda$CA$eig)),
3 ) * 100
#Plotting constrained ordination results
par(mar = c(5,5,4,4) + .1)
plot(scores(S.dbrda, display = "wa"), xlim = c(-2, 2.1), ylim = c(-2.3, 2.0),
xlab = paste("dbRDA 1 (", S.explainvar1, "%)", sep = ""),
ylab = paste("dbRDA 2 (", S.explainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE
)
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
points(scores(S.dbrda, display = "wa"),
pch = 19, cex = 3, bg = "gray", col = "gray")
text(scores(S.dbrda, display = "wa"),
labels = row.names(scores(S.dbrda, display = "wa")))
#Plotting vectors for influence of environmental factors
vectors <- scores(S.dbrda, display = "bp")
arrows(0, 0, vectors[,1], vectors[,2],
lwd = 2, lty = 1, length = .2, col = "red")
text(vectors[,1], vectors[,2], pos = 3,
labels = row.names(vectors), col = "red")
axis(side = 3, lwd.ticks = 2, cex.axis = 1.2, las = 1, col = "red", lwd = 2.2,
at = pretty(range(vectors[,1])) * 2, labels = pretty(range(vectors[,1])))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.2, las = 1, col = "red", lwd = 2.2,
at = pretty(range(vectors[,2])) * 2, labels = pretty(range(vectors[,2])))
env.chem <- as.matrix(env[,c(2:4)])
S.dbrda <- dbrda(fungalS ~ ., as.data.frame(env.chem))
ordiplot(S.dbrda)
S.dbrda0 <- dbrda(fungalS ~ 1, as.data.frame(env.chem))
S.dbrda1 <- dbrda(fungalS ~ ., as.data.frame(env.chem))
S.dbrda <- ordiR2step(S.dbrda0, S.dbrda1, perm.max = 999)
permutest(S.dbrda, permutations = 999)
envfit(S.dbrda, env.chem, permutations = 999)
#Calculating explained variation on axes
S.explainvar1 <- round(S.dbrda$CCA$eig[1]/
sum(c(S.dbrda$CCA$eig, S.dbrda$CA$eig)),
3 ) * 100
S.explainvar2 <- round(S.dbrda$CCA$eig[2]/
sum(c(S.dbrda$CCA$eig, S.dbrda$CA$eig)),
3 ) * 100
#Plotting constrained ordination results
par(mar = c(5,5,4,4) + .1)
plot(scores(S.dbrda, display = "wa"), xlim = c(-2, 2.1), ylim = c(-2.3, 2.0),
xlab = paste("dbRDA 1 (", S.explainvar1, "%)", sep = ""),
ylab = paste("dbRDA 2 (", S.explainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE
)
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
points(scores(S.dbrda, display = "wa"),
pch = 19, cex = 3, bg = "gray", col = "gray")
text(scores(S.dbrda, display = "wa"),
labels = row.names(scores(S.dbrda, display = "wa")))
#Plotting vectors for influence of environmental factors
vectors <- scores(S.dbrda, display = "bp")
arrows(0, 0, vectors[,1], vectors[,2],
lwd = 2, lty = 1, length = .2, col = "red")
text(vectors[,1], vectors[,2], pos = 3,
labels = row.names(vectors), col = "red")
axis(side = 3, lwd.ticks = 2, cex.axis = 1.2, las = 1, col = "red", lwd = 2.2,
at = pretty(range(vectors[,1])) * 2, labels = pretty(range(vectors[,1])))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.2, las = 1, col = "red", lwd = 2.2,
at = pretty(range(vectors[,2])) * 2, labels = pretty(range(vectors[,2])))
env.chem <- as.matrix(env[,c(2:4)])
fungalS <- fungalBC
S.dbrda <- dbrda(fungalS ~ ., as.data.frame(env.chem))
ordiplot(S.dbrda)
S.dbrda0 <- dbrda(fungalS ~ 1, as.data.frame(env.chem))
S.dbrda1 <- dbrda(fungalS ~ ., as.data.frame(env.chem))
S.dbrda <- ordiR2step(S.dbrda0, S.dbrda1, perm.max = 999)
permutest(S.dbrda, permutations = 999)
env.chem <- as.matrix(env[,c(2:4)])
fungalS <- fungalBC
S.dbrda <- dbrda(fungalS ~ ., as.data.frame(env.chem))
ordiplot(S.dbrda)
S.dbrda0 <- dbrda(fungalS ~ 1, as.data.frame(env.chem))
S.dbrda1 <- dbrda(fungalS ~ ., as.data.frame(env.chem))
S.dbrda <- ordiR2step(S.dbrda0, S.dbrda1, perm.max = 999)
summary$location <- test$Location
plot.info <- as.data.frame()
plot.info <- as.data.frame(test$Location)
View(plot.info)
rownames(plot.info) <- rownames(test)
View(plot.info)
View(env)
S1c <- mean(env[5, 1:5])
str(env)
env[5, 1:5]
S1c <- mean(env[1:5, 5])
env[1:5, 5]
env[2:6, 5]
env[1:5, 2]
mean(env[1:5, 2])
plot.info <- data.frame(c(rep("Ridge", 5), rep("Snowbed", 5)))
View(plot.info)
View(plot.info)
rownames(plot.info) <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
plot.info <- data.frame
plot.info$Location <- data.frame(c(rep("Ridge", 5), rep("Snowbed", 5)))
plot.info <- data.frame
View(plot.info)
plot.info <- data.frame()
plot.info$Location <- data.frame(c(rep("Ridge", 5), rep("Snowbed", 5)))
plot.info <- as.data.frame(matrix(nrow = 10, ncol=1))
View(plot.info)
plot.info$Location <- data.frame(c(rep("Ridge", 5), rep("Snowbed", 5)))
View(plot.info)
plot.info <- as.data.frame(matrix(nrow = 10, ncol=1))
plot.info$Location <- c(rep("Ridge", 5), rep("Snowbed", 5))
View(plot.info)
plot.info <- plot.info[-1,]
plot.info <- as.data.frame(matrix(nrow = 10, ncol=1))
plot.info <- plot.info[,-1]
plot.info$Location <- c(rep("Ridge", 5), rep("Snowbed", 5))
rownames(plot.info) <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
plot.info$C <- c(mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]),mean(env[1:5, 2]))
plot.info$C <- c(mean(env[1:5, 2]), mean(env[6:10, 2]), mean(env[11:15, 2]), mean(env[16:20, 2]), mean(env[21:25, 2]), mean(env[26:29, 2]),mean(env[30:33, 2]), mean(env[34:38, 2]), mean(env[39:43, 2]), mean(env[44:48, 2]))
View(env)
# Making new dataframe with summary of all statistics
site.C <- mean(env[1:5, 2])
plot.info <- as.data.frame(matrix(nrow = 10, ncol=1))
plot.info <- plot.info[,-1]
plot.info$Location <- c(rep("Ridge", 5), rep("Snowbed", 5))
rownames(plot.info) <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
plot.info$P <- c(mean(env[1:5, 2]), mean(env[6:10, 2]), mean(env[11:15, 2]), mean(env[16:20, 2]), mean(env[21:25, 2]), mean(env[26:29, 2]),mean(env[30:33, 2]), mean(env[34:38, 2]), mean(env[39:43, 2]), mean(env[44:48, 2]))
plot.info$N <- c(mean(env[1:5, 3]), mean(env[6:10, 3]), mean(env[11:15, 3]), mean(env[16:20, 3]), mean(env[21:25, 3]), mean(env[26:29, 3]),mean(env[30:33, 3]), mean(env[34:38, 3]), mean(env[39:43, 3]), mean(env[44:48, 3]))
plot.info$C <- c(mean(env[1:5, 4]), mean(env[6:10, 4]), mean(env[11:15, 4]), mean(env[16:20, 4]), mean(env[21:25, 4]), mean(env[26:29, 4]),mean(env[30:33, 4]), mean(env[34:38, 4]), mean(env[39:43, 4]), mean(env[44:48, 4]))
View(plot.info)
# Adding alpha diversity data
for (i in ncol(rarefied_site_species[1:407])){
print(i)
}
ncol(rarefied_site_species)
View(rarefied_site_species)
# Adding alpha diversity data
for (i in ncol(rarefied_site_species[1:807])){
print(i)
}
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
View(rarefied_site_species)
View(rarefied.sites)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites <- c(sum(rarefied_site_species[1:5, i]), mean(env[6:10, i]), mean(env[11:15, i]), mean(env[16:20, i]), mean(env[21:25, i]), mean(env[26:29, i]),mean(env[30:33, i]), mean(env[34:38, i]), mean(env[39:43, i]), mean(env[44:48, i]))
}
str(rarefied_site_species)
sum(1,2,3)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites <- c(sum(rarefied_site_species[1:5, i]), sum(env[6:10, i]), sum(env[11:15, i]), sum(env[16:20, i]), sum(env[21:25, i]), sum(env[26:29, i]),sum(env[30:33, i]), sum(env[34:38, i]), sum(env[39:43, i]), sum(env[44:48, i]))
}
View(rarefied_site_species)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites$i <- c(sum(rarefied_site_species[1:5, i]), sum(env[6:10, i]), sum(env[11:15, i]), sum(env[16:20, i]), sum(env[21:25, i]), sum(env[26:29, i]),sum(env[30:33, i]), sum(env[34:38, i]), sum(env[39:43, i]), sum(env[44:48, i]))
}
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,i] <- c(sum(rarefied_site_species[1:5, i]), sum(env[6:10, i]), sum(env[11:15, i]), sum(env[16:20, i]), sum(env[21:25, i]), sum(env[26:29, i]),sum(env[30:33, i]), sum(env[34:38, i]), sum(env[39:43, i]), sum(env[44:48, i]))
}
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,ncol(rarefied.sites) + 1] <- c(sum(rarefied_site_species[1:5, i]), sum(env[6:10, i]), sum(env[11:15, i]), sum(env[16:20, i]), sum(env[21:25, i]), sum(env[26:29, i]),sum(env[30:33, i]), sum(env[34:38, i]), sum(env[39:43, i]), sum(env[44:48, i]))
}
View(rarefied.sites)
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,(ncol(rarefied.sites) + 1)] <- c(sum(rarefied_site_species[1:5, i]), sum(env[6:10, i]), sum(env[11:15, i]), sum(env[16:20, i]), sum(env[21:25, i]), sum(env[26:29, i]),sum(env[30:33, i]), sum(env[34:38, i]), sum(env[39:43, i]), sum(env[44:48, i]))
}
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 48, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,(ncol(rarefied.sites) + 1)] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
ncol(rarefied_site_species[1:807]
ncol(rarefied_site_species[1:807])
ncol(rarefied_site_species[1:807])
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,(ncol(rarefied.sites) + 1)] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,(ncol(rarefied.sites) + 1)] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
View(rarefied.sites)
rarefied.sites[,2] <- c(sum(rarefied_site_species[1:5, 2]), sum(rarefied_site_species[6:10, 2]), sum(rarefied_site_species[11:15, 2]), sum(rarefied_site_species[16:20, 2]), sum(rarefied_site_species[21:25, 2]), sum(rarefied_site_species[26:29, 2]),sum(rarefied_site_species[30:33, 2]), sum(rarefied_site_species[34:38, 2]), sum(rarefied_site_species[39:43, 2]), sum(rarefied_site_species[44:48, 2]))
View(rarefied.sites)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 0)))
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 0)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,(ncol(rarefied.sites) + 1)] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
ncol(rarefied.sites)
View(rarefied.sites)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 0)))
nrow(rarified.sites)
nrow(rarefied.sites)
ncol(rarefied.sites)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 807)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,(ncol(rarefied.sites) + 1)] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
View(rarefied.sites)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 807)))
for (i in ncol(rarefied_site_species[1:807])){
rarefied.sites[,i] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
View(rarefied.sites)
for ( i in 1:807){ print(i)}
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 0)))
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 0)))
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 807)))
View(rarefied.sites)
for (i in 1:807){
rarefied.sites[,i] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
View(rarefied.sites)
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 807)))
for (i in 1:(ncol(rarefied_site_species))){
rarefied.sites[,i] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
View(rarefied.sites)
# Species richness
richness <- rowSums((site_species.t > 0) * 1)
# Species richness
richness <- rowSums((rarefied.sites > 0) * 1)
# Species richness
plot.info$richness <- rowSums((rarefied.sites > 0) * 1)
View(plot.info)
# Making new dataframe with summary of all statistics
plot.info <- as.data.frame(matrix(nrow = 10, ncol=1))
plot.info <- plot.info[,-1]
plot.info$Location <- c(rep("Ridge", 5), rep("Snowbed", 5))
rownames(plot.info) <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
plotinfo$site <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
# Making new dataframe with summary of all statistics
plot.info <- as.data.frame(matrix(nrow = 10, ncol=1))
plot.info <- plot.info[,-1]
plot.info$Location <- c(rep("Ridge", 5), rep("Snowbed", 5))
rownames(plot.info) <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
plot.info$site <- c("S1","S2","S3","S4","S5","R1","R2","R3","R4","R5")
# Adding average soil nutrients
plot.info$P <- c(mean(env[1:5, 2]), mean(env[6:10, 2]), mean(env[11:15, 2]), mean(env[16:20, 2]), mean(env[21:25, 2]), mean(env[26:29, 2]),mean(env[30:33, 2]), mean(env[34:38, 2]), mean(env[39:43, 2]), mean(env[44:48, 2]))
plot.info$N <- c(mean(env[1:5, 3]), mean(env[6:10, 3]), mean(env[11:15, 3]), mean(env[16:20, 3]), mean(env[21:25, 3]), mean(env[26:29, 3]),mean(env[30:33, 3]), mean(env[34:38, 3]), mean(env[39:43, 3]), mean(env[44:48, 3]))
plot.info$C <- c(mean(env[1:5, 4]), mean(env[6:10, 4]), mean(env[11:15, 4]), mean(env[16:20, 4]), mean(env[21:25, 4]), mean(env[26:29, 4]),mean(env[30:33, 4]), mean(env[34:38, 4]), mean(env[39:43, 4]), mean(env[44:48, 4]))
# Adding alpha diversity data
rarefied.sites <- as.data.frame((matrix(nrow = 10, ncol = 807)))
for (i in 1:(ncol(rarefied_site_species))){
rarefied.sites[,i] <- c(sum(rarefied_site_species[1:5, i]), sum(rarefied_site_species[6:10, i]), sum(rarefied_site_species[11:15, i]), sum(rarefied_site_species[16:20, i]), sum(rarefied_site_species[21:25, i]), sum(rarefied_site_species[26:29, i]),sum(rarefied_site_species[30:33, i]), sum(rarefied_site_species[34:38, i]), sum(rarefied_site_species[39:43, i]), sum(rarefied_site_species[44:48, i]))
}
# Species richness
plot.info$richness <- rowSums((rarefied.sites > 0) * 1)
anv <- anova(plot.info)
anv <- anova(plot.info, richess ~ location)
plot.info <- as.data.frame(plot.info')
anv <- anova(plot.info, richess ~ location)
plot.info <- as.data.frame(plot.info)
anv <- anova(plot.info, richess ~ location)
summary(anv)
summary(anv)
print(anv)
